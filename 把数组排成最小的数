/*题目描述
        输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。
        例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。
  思路：
      将元素先排下序，然后合并。
      排序后应使得元素从头到尾拼接数字最小
      实现一个排序类，按两个元素不同组合后的大小排序，比如3、32，323大于332，所以排序时32在3之前
*/

public class Solution {
      public String PrintMinNumber(int[] numbers) {
          if (numbers == null) return null;
          String res = "";
          String strs = new String[numbers.length];
          for (int i = 0; i < numbers.length; i++) {
              strs[i] = String.valueOf(numbers[i]);
          }
          Arrays.sort(strs, new Comparator<String>() {
              public int compare(String str1, String str2) {
                  String tmp1 = str1 + str2;
                  String tmp2 = str2 + str1;
                  return tmp1.compareTo(tmp2);
              }
          });
          for (String str : strs) {
              res += str;
          }
          return res;
      }
}
