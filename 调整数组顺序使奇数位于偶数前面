/*题目描述
    输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，
    所有的偶数位于位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。
  思路：
    1、使用辅助空间，扫描两遍原数组，第一次将奇数提取出来，第二次将偶数提取出来
    2、利用冒泡排序的思想，交换原则是前一个为偶数、下一个为奇数
*/
//思路1
public class Solution {
    public void reOrderArray(int [] array) {
        if (array == null || array.length == 0) return;
        int[] helper = new int[array.length];
        int j = 0;
        for (int i = 0; i < array.length; i++) {
          if (array[i] & 01 == 1) helper[j++] = array[i];
        }
        for (int i = 0; i < array.length; i++) {
          if (array[i] & 01 == 0) helper[j++] = array[i];
        }
        for (int i = 0; i < array.length; i++) {
          array[i] = helper[i];
        }
        return;
    }
} 

//思路2
public class Solution {
    public void reOrderArray(int [] array) {
        if (array == null || array.length == 0) return;
        for (int i = 0; i < array.length - 1; i++) {
            for (int j = 0; j < array.length - 1 - i; j++) {
                if (array[j] % 2 == 0 && array[j + 1] % 2 == 1) {
                    int tmp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = tmp;
                }
            }
        }
    }
} 
