/*题目描述:
        统计一个数字在排序数组中出现的次数。
   思路1：直接扫描数组，统计次数，复杂度为O(n)
   思路2：排序数组，可以使用二分查找
        1、使用二分查找找到该数字在数组中起始位置
        2、使用二分查找找到该数字在数中结束位置
        3、求个数
*/





public class Solution {
    public int GetNumberOfK(int [] array , int k) {
        if (array == null || array.length == 0) return 0;
        int left = GetIndexLeftOfK(array, k, 0, array.length - 1);
        int right = GetIndexRightOfK(array, k, 0, array.length - 1);
        return (left == -1 || right == -1) ? 0 : right - left + 1;
    }
    public int GetIndexLeftOfK(int[] array, int k, int start, int end) {
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (array[mid] < k) {
                start = mid + 1;
            } else if (array[mid] > k) {
                end = mid - 1;
            } else if (mid - 1 >= 0 && array[mid - 1] == k) {
                end = mid - 1;
            } else if (array[mid] == k) {
                return mid;
            }
        }
        return -1;
    }
    public int GetIndexRightOfK(int[] array, int k, int start, int end) {
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (array[mid] < k) {
                start = mid + 1;
            } else if (array[mid] > k) {
                end = mid - 1;
            } else if (mid + 1 < array.length && array[mid + 1] == k) {
                start = mid + 1;
            } else if (array[mid] == k) {
                return mid;
            }
        }
        return -1;
    }
    
}
