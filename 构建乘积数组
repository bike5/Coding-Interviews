/*题目描述:
      给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],
      其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。
  思路：
      B0 = 1 * A1 * A2 * A3 ... An-1
      B1 = A0 * 1 * A2 * A3 ... An-1
      B2 = A0 * A1 * 1 * A3 ... An-1
      ...
      Bn-2 = A0 * A1 * A2 ... 1 * An-1
      Bn-1 = A0 * A1 * A2 ... An-2 * 1
      
      构成两个三角矩阵，先从上到下求下三角矩阵，迭代式为B[i] = B[i - 1] * A[i - 1];
      再求从下到上求上三角矩阵，迭代式为tmp *= A[i + 1]; B[i] *= tmp;
*/
import java.util.ArrayList;
public class Solution {
    public int[] multiply(int[] A) {
		if (A == null || A.length == 0) return A;
        int[] B = new int[A.length];
        B[0] = 1;
        for (int i = 1; i < A.length; i++) {//下三角矩阵求解
            B[i] = B[i - 1] * A[i - 1];
        }
        int tmp = 1;
        for (int i = A.length - 2; i >= 0; i--) {//上三角矩阵求解
            tmp *= A[i + 1];
            B[i] *= tmp;
        }
        return B;
    }
}
