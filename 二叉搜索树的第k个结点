/*题目描述
      给定一颗二叉搜索树，请找出其中的第k个结点。例如， 5 / \ 3 7 /\ /\ 2 4 6 8 中，按结点数值大小顺序第三个结点的值为4。
  思路：
      中序遍历二叉树，当count==k时，返回当前节点
*/

import java.util.Stack;
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {
    TreeNode KthNode(TreeNode pRoot, int k)
    {
        int count = 0;
        Stack<TreeNode> stack = new Stack<>();
        while (pRoot != null || stack.size() != 0) {
            while (pRoot != null) {
                stack.push(pRoot);
                pRoot = pRoot.left;
            }
            pRoot = stack.pop();
            count++;
            if (count == k) return pRoot;
            pRoot = pRoot.right;
        }
        return null;
    }
}
