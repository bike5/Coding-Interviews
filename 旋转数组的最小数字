/*题目描述：
    把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
    例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
    NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
  思路：   
      两个有序数组，可以使用二分查找的方式。
      若中间值大于尾值，则最小值在中间值+1至尾指之间
      若中间值小于尾值，则最小值在起始值至中间值之间
      若中间值等于尾值，则最小值在起始值至尾值-1之间
*/

import java.util.ArrayList;
public class Solution {
    public int minNumberInRotateArray(int [] array) {
    	if (array == null || array.length == 0) return 0;
        int start = 0, end = array.length - 1;
        while (start < end) {
            int mid = start + (end - start) / 2;
            if (array[mid] < array[end]) end = mid;
            else if (array[mid] > array[end]) start = mid + 1;
            else end = end - 1;
        }
        return array[start];
        
    }
}
