/*题目描述：
      一个链表中包含环，请找出该链表的环的入口结点。
   解题思路：
        1、首先使用快慢指针判断链表中是否有环。判断依据：快慢指针是否能相遇。
        2、若能相遇，将fast or slow 设置为链表头部，两个指针同时前进，相遇时的节点便是入口节点
        
        第一步，找环中相汇点。分别用p1，p2指向链表头部，p1每次走一步，p2每次走二步，直到p1==p2找到在环中的相汇点。
        第二步，找环的入口。接上步，当p1==p2时，p2所经过节点数为2x,p1所经过节点数为x,设环中有n个节点,p2比p1多走一圈有2x=n+x; n=x;可以看出p1实际走了一个环的步数，再让p2指向链表头部，p1位置不变，p1,p2每次走一步直到p1==p2; 此时p1指向环的入口。


*/

/*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {

    public ListNode EntryNodeOfLoop(ListNode pHead)
    {
        ListNode fast = pHead, slow = pHead;
        int flag = 0;
        while (fast != null && slow != null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (slow == fast) {
                flag = 1;
                break;
            }
        }
        fast = pHead;
        while (fast != null && slow != null) {
            if (flag == 1 && slow == fast) return fast;
            fast = fast.next;
            slow = slow.next;
        }
        return null;
    }
}
